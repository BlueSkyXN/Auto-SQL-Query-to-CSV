
name: Python Building

on:
   push:
     branches: [ main ]
   workflow_dispatch:

jobs:
  build-Auto-SQL-Query-to-CSV:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Set commit message
        id: set_commit
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            echo "COMMIT_MESSAGE=$(git log --format=%B -1)" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "windows-2019" ]; then
            commit_message=$(git log --format=%B -1)
            echo "COMMIT_MESSAGE=$commit_message" >> $GITHUB_ENV
          fi
        shell: bash
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.10.11/x64

      - name: Install dependencies
        run: |
          python -m pip install pyinstaller argparse pandas pymysql --ignore-installed
      - name: Build executable
        run: |
          pyinstaller --onefile --hidden-import argparse --hidden-import pandas --hidden-import pymysql --strip Auto-SQL-Query-to-CSV.py --distpath dist/${{ matrix.os }}
      - name: Upload-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Auto-SQL-Query-to-CSV_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/ubuntu-22.04/Auto-SQL-Query-to-CSV

      - name: Upload-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Auto-SQL-Query-to-CSV_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/windows-2019/Auto-SQL-Query-to-CSV.exe

  build-Auto-SQL-Query-to-CSV_SQLAlchemy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Set commit message
        id: set_commit
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            echo "COMMIT_MESSAGE=$(git log --format=%B -1)" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "windows-2019" ]; then
            commit_message=$(git log --format=%B -1)
            echo "COMMIT_MESSAGE=$commit_message" >> $GITHUB_ENV
          fi
        shell: bash
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.10.11/x64

      - name: Install dependencies
        run: |
          python -m pip install pyinstaller argparse pandas sqlalchemy pymysql --ignore-installed
      - name: Build executable
        run: |
          pyinstaller --onefile --hidden-import argparse --hidden-import pandas --hidden-import sqlalchemy --hidden-import pymysql --strip Auto-SQL-Query-to-CSV_SQLAlchemy.py --distpath dist/${{ matrix.os }}

      - name: Upload-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Auto-SQL-Query-to-CSV_SQLAlchemy_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/ubuntu-22.04/Auto-SQL-Query-to-CSV_SQLAlchemy

      - name: Upload-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_Auto-SQL-Query-to-CSV_SQLAlchemy_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/windows-2019/Auto-SQL-Query-to-CSV_SQLAlchemy.exe
  
  build-UTF8-to-ANSI_CSV:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-22.04
          - build: windows
            os: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Set commit message
        id: set_commit
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-22.04" ]; then
            echo "COMMIT_MESSAGE=$(git log --format=%B -1)" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" == "windows-2019" ]; then
            commit_message=$(git log --format=%B -1)
            echo "COMMIT_MESSAGE=$commit_message" >> $GITHUB_ENV
          fi
        shell: bash
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.10.11/x64

      - name: Install dependencies
        run: |
          python -m pip install pyinstaller csv sys argparse --ignore-installed
      - name: Build executable
        run: |
          pyinstaller --onefile --hidden-import argparse --hidden-import csv --hidden-import sys --strip UTF8-to-ANSI/UTF8-to-ANSI_CSV.py --distpath dist/${{ matrix.os }}

      - name: Upload-ubuntu-22.04
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_UTF8-to-ANSI_CSV_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/ubuntu-22.04/UTF8-to-ANSI_CSV

      - name: Upload-windows-2019
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v3
        with:
          name: build_UTF8-to-ANSI_CSV_${{ matrix.os }}_v${{ env.COMMIT_MESSAGE }}
          path: dist/windows-2019/UTF8-to-ANSI_CSV.exe
